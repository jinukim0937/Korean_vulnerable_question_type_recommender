-- 21번 유저 생성

INSERT INTO USERS VALUES('U00000021');

-- 21번 유저가 1번 시험을 본경우 시험 정보가 problem_feedback에 저장
INSERT INTO PROBLEM_FEEDBACK
VALUES
(	"P0000001"	,	"U00000021"	,	1	,	60.46497947	)	,
(	"P0000002"	,	"U00000021"	,	0	,	68.56974824	)	,
(	"P0000003"	,	"U00000021"	,	1	,	66.18977062	)	,
(	"P0000004"	,	"U00000021"	,	1	,	54.84809585	)	,
(	"P0000005"	,	"U00000021"	,	1	,	53.66806588	)	,
(	"P0000006"	,	"U00000021"	,	1	,	49.62748421	)	,
(	"P0000007"	,	"U00000021"	,	0	,	65.49899124	)	,
(	"P0000008"	,	"U00000021"	,	0	,	46.04169016	)	,
(	"P0000009"	,	"U00000021"	,	1	,	73.11515826	)	,
(	"P0000010"	,	"U00000021"	,	1	,	56.26865842	)	,
(	"P0000011"	,	"U00000021"	,	0	,	64.7681075	)	,
(	"P0000012"	,	"U00000021"	,	1	,	56.07500984	)	,
(	"P0000013"	,	"U00000021"	,	1	,	49.47099068	)	,
(	"P0000014"	,	"U00000021"	,	1	,	66.51386844	)	,
(	"P0000015"	,	"U00000021"	,	1	,	131.7551697	)	,
(	"P0000016"	,	"U00000021"	,	1	,	125.147758	)	,
(	"P0000017"	,	"U00000021"	,	1	,	121.4118183	)	,
(	"P0000018"	,	"U00000021"	,	0	,	157.6911464	)	,
(	"P0000019"	,	"U00000021"	,	1	,	116.0928751	)	,
(	"P0000020"	,	"U00000021"	,	0	,	111.3085691	)	,
(	"P0000021"	,	"U00000021"	,	1	,	136.053946	)	,
(	"P0000022"	,	"U00000021"	,	1	,	127.0423835	)	,
(	"P0000023"	,	"U00000021"	,	1	,	140.212727	)	,
(	"P0000024"	,	"U00000021"	,	0	,	86.28102809	)	,
(	"P0000025"	,	"U00000021"	,	1	,	123.0862627	)	,
(	"P0000026"	,	"U00000021"	,	1	,	133.2562562	)	,
(	"P0000027"	,	"U00000021"	,	1	,	177.6302964	)	,
(	"P0000028"	,	"U00000021"	,	1	,	72.23374817	)	,
(	"P0000029"	,	"U00000021"	,	1	,	162.1481516	)	,
(	"P0000030"	,	"U00000021"	,	1	,	171.9680937	)	,
(	"P0000031"	,	"U00000021"	,	0	,	161.5638667	)	,
(	"P0000032"	,	"U00000021"	,	1	,	147.6099828	)	,
(	"P0000033"	,	"U00000021"	,	0	,	140.0993952	)	,
(	"P0000034"	,	"U00000021"	,	0	,	128.6324581	)	,
(	"P0000035"	,	"U00000021"	,	0	,	83.41345096	)	,
(	"P0000036"	,	"U00000021"	,	1	,	194.3036385	)	,
(	"P0000037"	,	"U00000021"	,	0	,	139.1609738	)	,
(	"P0000038"	,	"U00000021"	,	1	,	102.5861362	)	,
(	"P0000039"	,	"U00000021"	,	1	,	83.71451425	)	,
(	"P0000040"	,	"U00000021"	,	0	,	163.8785077	)	,
(	"P0000041"	,	"U00000021"	,	1	,	104.6335391	)	,
(	"P0000042"	,	"U00000021"	,	1	,	33.69486187	)	,
(	"P0000043"	,	"U00000021"	,	0	,	53.69875208	)	,
(	"P0000044"	,	"U00000021"	,	0	,	113.878911	)	,
(	"P0000045"	,	"U00000021"	,	1	,	67.51478826	)	,
(	"P0000046"	,	"U00000021"	,	0	,	138.4434961	)	,
(	"P0000047"	,	"U00000021"	,	1	,	158.0961879	)	,
(	"P0000048"	,	"U00000021"	,	1	,	121.7470423	)	,
(	"P0000049"	,	"U00000021"	,	0	,	57.42292858	)	,
(	"P0000050"	,	"U00000021"	,	0	,	106.5988537	)	,
(	"P0000051"	,	"U00000021"	,	0	,	92.76990977	)	,
(	"P0000052"	,	"U00000021"	,	1	,	135.5595661	)	,
(	"P0000053"	,	"U00000021"	,	1	,	106.7721931	)	,
(	"P0000054"	,	"U00000021"	,	0	,	98.10691066	)	,
(	"P0000055"	,	"U00000021"	,	1	,	130.8331973	)	,
(	"P0000056"	,	"U00000021"	,	0	,	141.5458283	)	,
(	"P0000057"	,	"U00000021"	,	1	,	138.0647486	)	,
(	"P0000058"	,	"U00000021"	,	0	,	124.6456556	)	,
(	"P0000059"	,	"U00000021"	,	1	,	135.221419	)	,
(	"P0000060"	,	"U00000021"	,	1	,	114.1865994	)	,
(	"P0000061"	,	"U00000021"	,	0	,	115.4018991	)	,
(	"P0000062"	,	"U00000021"	,	0	,	129.3861208	)	,
(	"P0000063"	,	"U00000021"	,	1	,	143.7749432	)	,
(	"P0000064"	,	"U00000021"	,	1	,	110.2237695	)	,
(	"P0000065"	,	"U00000021"	,	1	,	121.7996755	)	,
(	"P0000066"	,	"U00000021"	,	1	,	133.8237597	)	,
(	"P0000067"	,	"U00000021"	,	0	,	118.6960111	)	,
(	"P0000068"	,	"U00000021"	,	1	,	132.8042607	)	,
(	"P0000069"	,	"U00000021"	,	1	,	122.4805138	)	,
(	"P0000070"	,	"U00000021"	,	1	,	144.1308698	)	,
(	"P0000071"	,	"U00000021"	,	1	,	115.4257298	)	,
(	"P0000072"	,	"U00000021"	,	1	,	141.3090781	)	,
(	"P0000073"	,	"U00000021"	,	0	,	128.6968371	)	,
(	"P0000074"	,	"U00000021"	,	0	,	133.3852877	)	,
(	"P0000075"	,	"U00000021"	,	1	,	106.7819403	)	,
(	"P0000076"	,	"U00000021"	,	1	,	119.7595719	)	,
(	"P0000077"	,	"U00000021"	,	1	,	115.2040793	)	,
(	"P0000078"	,	"U00000021"	,	0	,	116.9282947	)	,
(	"P0000079"	,	"U00000021"	,	1	,	125.0645527	)	,
(	"P0000080"	,	"U00000021"	,	0	,	111.7056461	)	,
(	"P0000081"	,	"U00000021"	,	1	,	115.6708529	)	,
(	"P0000082"	,	"U00000021"	,	1	,	134.801349	)	,
(	"P0000083"	,	"U00000021"	,	1	,	123.493495	)	,
(	"P0000084"	,	"U00000021"	,	1	,	106.3178183	)	,
(	"P0000085"	,	"U00000021"	,	1	,	121.2992638	)	,
(	"P0000086"	,	"U00000021"	,	0	,	130.1244128	)	,
(	"P0000087"	,	"U00000021"	,	1	,	130.1575721	)	,
(	"P0000088"	,	"U00000021"	,	1	,	106.7563859	)	,
(	"P0000089"	,	"U00000021"	,	1	,	113.5873629	)	,
(	"P0000090"	,	"U00000021"	,	0	,	119.4984477	)	,
(	"P0000091"	,	"U00000021"	,	0	,	119.2126789	)	,
(	"P0000092"	,	"U00000021"	,	1	,	117.4087721	)	,
(	"P0000093"	,	"U00000021"	,	0	,	116.3656377	)	,
(	"P0000094"	,	"U00000021"	,	1	,	119.0264116	)	,
(	"P0000095"	,	"U00000021"	,	0	,	65.69105394	)	,
(	"P0000096"	,	"U00000021"	,	1	,	64.87422699	)	,
(	"P0000097"	,	"U00000021"	,	0	,	62.96511307	)	,
(	"P0000098"	,	"U00000021"	,	1	,	58.43087281	)	,
(	"P0000099"	,	"U00000021"	,	1	,	62.22905599	)	,
(	"P0000100"	,	"U00000021"	,	1	,	66.01392698	)	;

SET @cnt = 0;

SELECT count(*) INTO @cnt
from problem_feedback 
where userId = 'U00000021' and RightWrong = '1';

### STEP1 : test_feedback 테이블 : 유저정보, 점수 추가
INSERT INTO test_feedback
VALUES('T0000001', 'U00000021', @cnt, 0);	-- @@@@ 유저ID, 시험ID 수동 기입 @@@@

### STEP2 : test_feedback : 랭킹 업데이트
CREATE VIEW RE_RANKING AS 		-- UPDATE 구문 FROM 절에서 자기 참조 안돼서 그냥 뷰 만듦.
SELECT *, RANK() OVER (ORDER BY SCORE DESC) AS NEW_RANKING
FROM test_feedback
WHERE TESTID = 'T0000001';	-- @@@@ 시험 ID 수동 기입 @@@@
-- ----------------------
-- ----------------------
-- ----------------------
-- ----------------------
-- ----------------------
-- ----------------------
-- ----------------------
# 이후부터 오류 발생

UPDATE test_feedback
	SET RE_RANKING = (SELECT NEW_RANKING FROM RE_RANKING 
			WHERE test_feedback.USERID = RE_RANKING.USERID);
-- ----------------------
#STEP 3 : PROBLEM TABLE : 풀이시간 평균 업데이트
        
CREATE TABLE PROBLEM_IN_TEST AS		-- UPDATE 구문은 자기참조 방지하므로 새로운 테이블 생성
SELECT PROBLEMID, TESTID
FROM PROBLEM;

UPDATE PROBLEM
	SET SolvingTimeAVG = (SELECT AVG(SolvingTime) FROM problem_feedback
		WHERE PROBLEM.PROBLEMID = PROBLEM_FEEDBACK.PROBLEMID AND
			PROBLEMID in (SELECT problemid FROM PROBLEM_IN_TEST
				where TestID = NEW_TEST));		-- @@@@시험ID 입력
-- ----------------------
# STEP4 : PROBLEM TABLE : 풀이시간 표준편차 업데이트         
UPDATE PROBLEM 
SET SolvingTimeStd = (SELECT STD(SolvingTime) FROM problem_feedback
	WHERE PROBLEM.PROBLEMID = PROBLEM_FEEDBACK.PROBLEMID AND
		PROBLEMID in (SELECT problemid FROM PROBLEM_IN_TEST
			where TestID = NEW_TEST));		-- @@@@시험ID 입력
-- ----------------------
# STEP5 : PROBLEM TABLE : 정확도 업데이트
CREATE VIEW USERNUM_BY_TEST AS
SELECT TESTID, COUNT(USERID) AS NUM
FROM TEST_FEEDBACK
GROUP BY TESTID;

UPDATE PROBLEM
SET Accuracy = (SELECT COUNT(RIGHTWRONG)/(SELECT NUM FROM usernum_by_test WHERE TESTID = NEW_TEST)
	WHERE PROBLEM_FEEDBACK AND
	problem_feedback.RIGHTWRONG = '1');
-- ----------------------
# STEP6 : Weak_or_not 업데이트
-- 일단 weak_or_not값 배제하고 row 인서트
        
        INSERT INTO WEAK_OR_NOT
        VALUES ('건축계획', NEW_U_TEST, 0),
			   ('건축시공', NEW_U_TEST, 0),
               ('건축설비', NEW_U_TEST, 0),
               ('건축구조', NEW_U_TEST, 0),
               ('건축법규', NEW_U_TEST, 0);

		-- WEAK_OR_NOT 업데이트
        
        UPDATE WEAK_OR_NOT
        SET WEAKORNOT = 1
        WHERE (SELECT COUNT(RIGHTWRONG) FROM PROBLEM_FEEDBACK,PROBLEM
			   WHERE ((USERID = NEW_U_TEST AND RIGHTWRONG = 0)
					 OR
					 (USERID = NEW_U_TEST AND
                      PROBLEM.PROBLEMID = PROBLEM_FEEDBACK.PROBLEMID AND 
					  PROBLEM_FEEDBACK.SOLVINGTIME > PROBLEM.SOLVINGTIMEAVG + PROBLEM.SOLVINGSTD))
				  AND
					  PROBLEM.PROBLEMTYPEID = WEAR_OR_NOT.PROBLEMTYPEID
               GROUP BY PROBLEM.PROBLEMTYPEID   
                  ) > 65 ;